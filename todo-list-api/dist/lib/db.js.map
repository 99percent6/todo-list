{"version":3,"sources":["../../src/lib/db.js"],"names":["db","config","usersCollectionName","tasksCollectionName","field","operator","value","collection","sort","code","result","query","where","get","orderBy","answer","docs","length","forEach","data","doc","Object","assign","id","push","console","error","user","login","password","encriptedPassword","CryptoJS","AES","encrypt","secretKey","toString","findByField","dbUser","email","dbEmail","add","find","e","decrypt","enc","Utf8","userId","task","delete","update"],"mappings":"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","file":"db.js","sourcesContent":["import CryptoJS from 'crypto-js';\n\nexport default class db {\n  constructor ({config, db}) {\n    this.config = config;\n    this.db = db;\n    this.usersCollectionName = 'users';\n    this.tasksCollectionName = 'todo-list';\n  };\n\n  async findByField ({ field, operator = '==', value, collection, sort }) {\n    if (!field || !value) {\n      return { code: 404, result: 'Missing field or value' };\n    }\n    try {\n      let query = this.db.collection(collection).where(field, operator, value).get();\n      if (sort) {\n        query = this.db.collection(collection).where(field, operator, value).orderBy(sort.field, sort.value).get();\n      }\n      const answer = await query;\n      let result = [];\n      if (answer && answer.docs && answer.docs.length) {\n        answer.docs.forEach(doc => {\n          let data = doc.data();\n          Object.assign(data, { id: doc.id });\n          result.push(data);\n        })\n        return { code: 200, result };\n      } else {\n        return { code: 404, result: 'Not found' };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async registerUser (user) {\n    if (!user.login || !user.password) {\n      console.error('Login or password is missing during registration');\n      return { code: 404, result: 'Missing login or password' };\n    }\n    const encriptedPassword = CryptoJS.AES.encrypt(user.password, this.config.db.secretKey).toString();\n    Object.assign(user, { password: encriptedPassword });\n    try {\n      const dbUser = await this.findByField({ field: 'login', value: user.login, collection: this.usersCollectionName });\n      const dbEmail = await this.findByField({ field: 'email', value: user.email, collection: this.usersCollectionName });\n      if (dbUser && dbUser.code === 200) {\n        return { code: 500, result: 'Login busy' };\n      } else if (dbEmail && dbEmail.code === 200) {\n        return { code: 500, result: 'Email busy' };\n      } else {\n        const result = await this.db.collection(this.usersCollectionName).add(user);\n        return { code: 200, result: result.id };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async checkUserLogin (login) {\n    if (!user.login) {\n      console.error('User login is missing');\n      return { code: 404, result: 'Missing user login' };\n    }\n    try {\n      const dbUser = await this.findByField({ field: 'login', value: login, collection: this.usersCollectionName });\n      if (dbUser && dbUser.code === 404) {\n        return { code: 200, result: 'OK' };\n      } else {\n        return { code: 500, result: 'Login busy' };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async checkUserEmail (email) {\n    if (!user.email) {\n      console.error('Email login is missing');\n      return { code: 404, result: 'Missing user email' };\n    }\n    try {\n      const dbUser = await this.findByField({ field: 'email', value: email, collection: this.usersCollectionName });\n      if (dbUser && dbUser.code === 404) {\n        return { code: 200, result: 'OK' };\n      } else {\n        return { code: 500, result: 'Email busy' };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async getUser ({ login }) {\n    if (!login) {\n      console.error('Login is required field');\n      return { code: 404, result: 'Login is required field' };\n    }\n    try {\n      const result = await this.findByField({ field: 'login', value: login, collection: this.usersCollectionName });\n      if (result && result.code === 200 && result.result.length) {\n        let user = result.result.find(e => e.login === login);\n        if (user && user.password) {\n          user.password = CryptoJS.AES.decrypt(user.password, this.config.db.secretKey).toString(CryptoJS.enc.Utf8);\n        }\n        return { code: result.code, result: user };\n      } else {\n        return { code: result.code, result: 'User not found' };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async getTasks ({ userId }) {\n    if (!userId) {\n      console.error('User id is required field');\n      return { code: 404, result: 'User id is required field' };\n    }\n    try {\n      const sort = { field: 'createdAt', value: 'desc' };\n      const result = await this.findByField({ field: 'author', value: userId, collection: this.tasksCollectionName, sort });\n      if (result && result.code === 200 && result.result.length) {\n        return result;\n      } else {\n        return { code: result.code, result: [] };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async addTask ({ task }) {\n    if (!task) {\n      console.error('Task is required field');\n      return { code: 404, result: 'Task is required field' };\n    }\n    try {\n      const result = await this.db.collection(this.tasksCollectionName).add(task);\n      if (result) {\n        return { code: 200, result: result.id };\n      } else {\n        return { code: 500, result: \"Task doesn't add\" };\n      }\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async deleteTask ({ id }) {\n    if (!id) {\n      console.error('Task id is required field');\n      return { code: 404, result: 'Task id is required field' };\n    }\n    try {\n      const result = await this.db.collection(this.tasksCollectionName).doc(id).delete();\n      return { code: 200, result: 'OK' };\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  };\n\n  async updateTask ({ task }) {\n    if (!task) {\n      console.error('Task is required field');\n      return { code: 404, result: 'Task is required field' };\n    }\n    try {\n      const result = await this.db.collection(this.tasksCollectionName).doc(task.id).update(task);\n      return { code: 200, result: 'OK' };\n    } catch (error) {\n      console.error(error);\n      return { code: 500, result: error };\n    }\n  }\n}"]}